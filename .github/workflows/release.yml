name: release

on:
  # publish when you push a tag like v1.2.3
  push:
    tags:
      - 'v*.*.*'
  # allow manual runs too
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # needed for npm provenance (npm publish --provenance)

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Cache Angular build cache
        uses: actions/cache@v4
        with:
          path: .angular/cache
          key: ${{ runner.os }}-angular-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-angular-

      - name: Install deps
        run: npm ci

      - name: Lint (optional)
        run: npm run lint --if-present

      - name: Test (optional)
        run: npm run test --if-present -- --watch=false

      - name: Build library
        run: npx ng build ngxsmk-tel-input --configuration production

      - name: Show dist (debug)
        run: |
          echo "=== dist ==="
          ls -la dist || true
          echo "=== dist/ngxsmk-tel-input ==="
          ls -la dist/ngxsmk-tel-input || true

      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Read package metadata
        id: meta
        run: |
          DIST="dist/ngxsmk-tel-input"
          if [ ! -d "$DIST" ]; then
            echo "::error::Build output not found at $DIST"
            exit 1
          fi
          NAME=$(node -p "require('./'+process.argv[1]+'/package.json').name" "$DIST")
          VER=$(node -p "require('./'+process.argv[1]+'/package.json').version" "$DIST")
          TAG="latest"
          [[ "$VER" == *"-"* ]] && TAG="next"
          echo "dist=$DIST"   >> $GITHUB_OUTPUT
          echo "name=$NAME"   >> $GITHUB_OUTPUT
          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "tag=$TAG"     >> $GITHUB_OUTPUT

      - name: Skip if version already published
        id: check
        run: |
          set +e
          npm view "${{ steps.meta.outputs.name }}@${{ steps.meta.outputs.version }}" version >/dev/null 2>&1
          EXISTS=$?
          set -e
          if [ "$EXISTS" -eq 0 ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version already on npm; skipping publish."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version not on npm; will publish."
          fi

      - name: Publish to npm
        if: steps.check.outputs.exists == 'false'
        working-directory: ${{ steps.meta.outputs.dist }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --tag ${{ steps.meta.outputs.tag }} --provenance

      - name: Pack tarball (artifact)
        if: steps.check.outputs.exists == 'false'
        working-directory: ${{ steps.meta.outputs.dist }}
        run: npm pack

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: ngxsmk-tel-input-${{ steps.meta.outputs.version }}
          path: |
            dist/ngxsmk-tel-input/**
            dist/ngxsmk-tel-input/*.tgz
